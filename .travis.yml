jobs:
  include:
    - os: linux
      sudo: required
      language: python
      python: 3.6
      dist: xenial
      # command to install Git LFS
      before_install:
      - echo -e "machine github.com\n  login $GITHUB_TOKEN" > ~/.netrc
      - python --version
      - pip install -U pip
      - pip install -U pytest
      # command to install dependencies
      install: 
      - "pip install -r requirements.txt"
      before_script:
      - git lfs pull
      # command to run tests
      script: python ./tests/test_objects/test_waveclass/test.py
      script: python ./tests/test_objects/test_bodyclass/test.py
    - os: osx
      osx_image: xcode10
      language: generic
      env: PYTHON=36
      # command to install Git LFS
      before_install:
      - brew install git-lfs
      - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        brew update
        # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
        brew install openssl readline
        # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
        # I didn't do this above because it works and I'm lazy.
        brew outdated pyenv || brew upgrade pyenv
        # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
        # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
        brew install pyenv-virtualenv
        pyenv install $PYTHON
        # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
        # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
        # modify the Bash environment. ??? So, I hand-set the variables instead.
        export PYENV_VERSION=$PYTHON
        export PATH="/Users/travis/.pyenv/shims:${PATH}"
        pyenv-virtualenv venv
        source venv/bin/activate
        # A manual check that the correct version of Python is running.
        python --version
      fi
      # command to install dependencies
      install: 
      - python -m pip install -U pip
      - python -m easy_install -U setuptools
      - "pip install -r requirements.txt"
      before_script:
      - git lfs pull
      # command to run tests
      script: python ./tests/test_objects/test_waveclass/test.py
      script: python ./tests/test_objects/test_bodyclass/test.py
