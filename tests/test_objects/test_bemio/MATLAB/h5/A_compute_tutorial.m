%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% MATLAB script name:
%% VCF_Tutorial_Arnal_axiMesh_Nemoh_Bemio.m
%%Directory name for storage of results : 'VCF_Tutorial_Arnal'
%%Warning: Directory name must be input between single quotes, when requested during processing!!!
%%%%%%%%%%%%%%%%%%%%%%%%%%%
%MATLAB script for a Vertical Cylinder with Flat bottom, based on the presentation "NEMOH: a tutorial using the Matlab wrapper",
%by Vincent Arnal, 11-2014 (arnal.vinc@gmail.com).
%Warning: This script must be located inside the directory MatlabRoutines or similar.
%NEMOH will create files and the CASE directory (in this case, 'VCF_Tutorial_Arnal'), inside the directory MatlabRoutines.
%Then you may move the files generated by NEMOH, to the CASE directory.
%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%% I) Call function axiMesh
%
% function [Mass,Inertia,KH,XB,YB,ZB]=axiMesh(r,z,n)
%
% Purpose : Mesh generation of an axisymmetric body for use with Nemoh
%
% Inputs : description of radial profile of the body
%   - n         : number of points for discretisation
%   - r         : array of radial coordinates
%   - z         : array of vertical coordinates
%
% Outputs : hydrostatics
%   - Mass      : mass of buoy
%   - Inertia   : inertia matrix (estimated assuming mass is distributed on
%   wetted surface)
%   - KH        : hydrostatic stiffness matrix
%   - XB,YB,ZB  : coordinates of buoyancy center
%
% Warning : z(i) must be greater than z(i+1)
%
% Copyright Ecole Centrale de Nantes 2014
% Licensed under the Apache License, Version 2.0
% Written by A. Babarit, LHEEA Lab.
%
%%%%%%%%%%%%%%%%%%%%%%%%%

%% NOTES:
%% Specify mesh file characteristics and mesh the body 
% A vertical cylinder is an axisymettric shape. As a result, the Matlab routine Aximesh.m could 
% be used for the purpose. Only the submerged part needs to be meshed, and because of the % revolution, only 3 points are required. 
% Aximesh.m can mesh only 1 body, but Mesh.m can mesh several. For more sophisticated 
% bodies, one should use a CAD software and adapt the Mesh file in the good format.
%%%%%%%%%%%%%%%%%%%%%%%%%

%% axiMesh inputs:

% clc
% clear all
% close all

n=3;			%No. of points required for describing the shape of the rotating curve (generatrix) of the surface of revolution (submerged part only). 
Radius=5			%Radius of the cylinder
Draft=10			%Height of the submerged part
r=[Radius Radius 0];		%Array of radial coordinates
z=[0 -Draft -Draft];		%Array of vertical coordinates


[Mass,Inertia,KH,XB,YB,ZB]=axiMesh(r,z,n)	%Call the function axiMesh.m

M=Inertia; 		%Mass Matrix

save('Mesh outputs','KH','M')


%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Input during processing:
%
%- Enter number of points for angular discretisation : 25
%- Directory name for storage of results : 'VCF_Tutorial_Arnal'
%- Vertical position of gravity center : -2
%- Target for number of panels : 500

%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% % II) Call function Nemoh
%
% function [A,B,Fe]=Nemoh(w, dir, depth)
%
% Purpose: Matlab wrapper for calculation of hydrodynamic coefficients using Nemoh
% 
% Inputs :
% - w     : Vector length(w) of wave frequencies (rad/s)
% - dir   : Wave direction (degrees).
% - depth : water depth (m), 0 for deep water.
%
% Outputs :
% - A  : Matrix (6xnBodies)x(6xnBodies)xlength(w) of added mass coefficients
% - B  : Matrix (6xnBodies)x(6xnBodies)xlength(w) of radiation damping coefficients
% - Fe : Matrix (6xnBodies)xlength(w) of exciation forces (complex values)
%
% Copyright Ecole Centrale de Nantes 2014
% Licensed under the Apache License, Version 2.0
% Written by A. Babarit, LHEEA Lab.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Nemoh inputs:
 
%w=[0.02:0.02:6];    		%Vector length(w) of wave frequencies (rad/s)
w 
dir=[30,60];              		%Wave direction (degrees). Towards positive x.
h=0;                		%Water depth (m), 0 for deep water approximation.
[A,B,Fe]=Nemoh(w, dir, h)	%Call function Nemoh


%% Plot results (radiation coefficients)

A33(1,:)=A(3,3,:); 
B33(1,:)=B(3,3,:);
figure; plot(w,A33,'r',w,B33,'b'); 
xlabel('wave frequency (rad/s)'); 
ylabel('Added mass, Damping coefficients'); 


%% Plot results (excitation force coefficients)
%% Fe1 & Fe3:

Fe1(1,:)=Fe(:,1);
Fe3(1,:)=Fe(:,3);
figure; subplot(2,1,1), plot(w,abs(Fe1),'r'); xlabel('wave frequency (rad/s)'); ylabel('Amplitude excitation response Fe1'); 
subplot(2,1,2), plot(w,abs(Fe3),'b'); xlabel('wave frequency (rad/s)'); ylabel('Amplitude excitation response Fe3'); 

%% Plot results (excitation force coefficients)
%% Fe1 & Phase:

figure;
subplot(2,1,1); plot(w, abs(Fe(:,3))); xlabel('wave frequency (rad/s)'); ylabel('Amplitude excitation response Fe3'); 
subplot(2,1,2); plot(w, angle(Fe(:,3))); xlabel('wave frequency (rad/s)'); ylabel('Phase excitation response'); 

%% Other available tools_FD2TD.m  (Freq.Domain to Time Domain)

T=[0:0.01:10];
[K33, Mu33]=FD2TD(w, A33, B33, T);	%Call FD2TD = Calculation of radiation coefficients in time domain from frequency domain coefficients using Ogilvie's formulae


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% III) Call function bemio
%
% Purpose: Reads data from a NEMOH working folder and creates the file *.h5 for the present case.
%
%% hydro = Read_NEMOH(hydro, filedir)
%
% hydro-data structure
% filedir-NEMOH working folder, must include:
% • Nemoh.cal
% • Mesh/Hydrostatics.dat (or Hydrostatiscs_0.dat, Hydrostatics_1.dat, etc. for multiple bodies)
% • Mesh/KH.dat (or KH_0.dat, KH_1.dat, etc. for multiple bodies)
% • Results/RadiationCoefficients.tec
% • Results/ExcitationForce.tec
% • Results/DiffractionForce.tec-If simu.nlHydro= 3 will be used
% • Results/FKForce.tec-If simu.nlHydro= 3 will be used
%
%Source: https://github.com/WEC-Sim/WEC-Sim/tree/master/source/functions/BEMIO
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% bemio inputs:

hydro = struct();

% hydro = Read_NEMOH(hydro,'C:\Users\wonst\Documents\NEMOH_test\VCF_Tutorial_Arnal');
hydro = Read_NEMOH(hydro,'C:\Users\wonst\Documents\WEC-Sim-Python\tests\test_objects\test_bodyclass\testData\h5\body_3_test');
hydro = Radiation_IRF(hydro,60,[],[],[],1.9);
hydro = Radiation_IRF_SS(hydro,[],[]);
hydro = Excitation_IRF(hydro,157,[],[],[],1.9);
Write_H5(hydro)
Plot_BEMIO(hydro)

